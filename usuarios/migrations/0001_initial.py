# Generated by Django 5.1.5 on 2025-02-11 16:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
                ('sobrenome', models.CharField(max_length=50, verbose_name='Sobrenome')),
                ('numero_matricula', models.CharField(max_length=20, unique=True, verbose_name='Número de Matrícula')),
            ],
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de Início')),
                ('data_fim', models.DateTimeField(blank=True, null=True, verbose_name='Data de Fim')),
                ('publico_alvo', models.CharField(choices=[('Todos', 'Todos'), ('Professores', 'Professores'), ('Alunos', 'Alunos'), ('Encarregados', 'Encarregados')], max_length=50, verbose_name='Público Alvo')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cargo', models.CharField(choices=[('P', 'Professor'), ('E', 'Encarregado')], max_length=1, verbose_name='Tipo de Conta')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone')),
                ('endereco', models.TextField(blank=True, null=True, verbose_name='Endereço')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Comunicacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assunto', models.CharField(max_length=200, verbose_name='Assunto')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('data_envio', models.DateTimeField(auto_now_add=True, verbose_name='Data de Envio')),
                ('destinatario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensagens_recebidas', to=settings.AUTH_USER_MODEL)),
                ('remetente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensagens_enviadas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Encarregado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relacionamento_com_aluno', models.CharField(choices=[('Pai', 'Pai'), ('Mãe', 'Mãe'), ('Outro', 'Outro')], max_length=50, verbose_name='Relação com o Aluno')),
                ('filho', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encarregado', to='usuarios.aluno', verbose_name='Filhos')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='encarregado', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disciplina', models.CharField(max_length=100, verbose_name='Disciplina')),
                ('formacao', models.CharField(blank=True, max_length=200, null=True, verbose_name='Área Acadêmica')),
                ('experiencia', models.TextField(blank=True, null=True, verbose_name='Experiência Profissional')),
                ('data_contratacao', models.DateField(blank=True, null=True, verbose_name='Data de Contratação')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='professor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=5, unique=True, verbose_name='Nome da turma')),
                ('curso', models.CharField(choices=[('Operador de informática', 'Operador de informática'), ('Auxiliar de contabilidade', 'Auxiliar de contabilidade'), ('Técnico de informática', 'Técnico de informática'), ('Informática de gestão', 'Informática de gestão'), ('Contabilidade de gestão', 'Contabilidade de gestão'), ('Finaças', 'Finaças')], max_length=30, verbose_name='Curso')),
                ('ano_letivo', models.CharField(choices=[('2000', '2000'), ('2001', '2001'), ('2002', '2002'), ('2003', '2003'), ('2004', '2004'), ('2005', '2005'), ('2006', '2006'), ('2007', '2007'), ('2008', '2008'), ('2009', '2009'), ('2010', '2010'), ('2011', '2011'), ('2012', '2012'), ('2013', '2013'), ('2014', '2014'), ('2015', '2015'), ('2016', '2016'), ('2017', '2017'), ('2018', '2018'), ('2019', '2019'), ('2020', '2020'), ('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024'), ('2025', '2025'), ('2026', '2026'), ('2027', '2027'), ('2028', '2028'), ('2029', '2029'), ('2030', '2030'), ('2031', '2031'), ('2032', '2032'), ('2033', '2033'), ('2034', '2034'), ('2035', '2035'), ('2036', '2036'), ('2037', '2037'), ('2038', '2038'), ('2039', '2039'), ('2040', '2040'), ('2041', '2041'), ('2042', '2042'), ('2043', '2043'), ('2044', '2044'), ('2045', '2045'), ('2046', '2046'), ('2047', '2047'), ('2048', '2048'), ('2049', '2049'), ('2050', '2050')], max_length=4, verbose_name='Ano Letivo')),
                ('serie', models.CharField(choices=[('7ª Classe', '7ª Classe'), ('8ª Classe', '8ª Classe'), ('9ª Classe', '9ª Classe'), ('10ª Classe', '10º Classe'), ('11ª Classe', '11ª Classe'), ('12ª Classe', '12ª Classe'), ('13ª Classe', '13ª Classe')], max_length=10, verbose_name='Classe')),
                ('periodo', models.CharField(choices=[('Manhã', 'Manhã'), ('Tarde', 'Tarde'), ('Noite', 'Noite')], max_length=5, verbose_name='Periódo')),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='turmas', to='usuarios.professor', verbose_name='Professor')),
            ],
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disciplina', models.CharField(max_length=100, verbose_name='Disciplina')),
                ('semestre', models.CharField(choices=[('1º Semestre', '1º Semestre'), ('2º Semestre', '2º Semestre'), ('3º Semestre', '3º Semestre')], max_length=15, verbose_name='Semestre')),
                ('tipo_prova', models.CharField(choices=[('Avaliação', 'Avaliação'), ('Prova do Professor', 'Prova do Professor'), ('Exame Final', 'Exame Final'), ('Recuperação', 'Recuperação')], max_length=20, verbose_name='Tipo de Prova')),
                ('nota', models.DecimalField(decimal_places=1, max_digits=5, verbose_name='Nota')),
                ('data_lancamento', models.DateField(auto_now_add=True, verbose_name='Data de Lançamento')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas', to='usuarios.aluno')),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notas_lancadas', to='usuarios.professor')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas', to='usuarios.turma')),
            ],
        ),
        migrations.CreateModel(
            name='Frequencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data da Aula')),
                ('presente', models.BooleanField(default=True, verbose_name='Presente?')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequencias', to='usuarios.aluno')),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='frequencias_registradas', to='usuarios.professor')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequencias', to='usuarios.turma')),
            ],
        ),
        migrations.AddField(
            model_name='aluno',
            name='turma',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alunos', to='usuarios.turma', verbose_name='Turma'),
        ),
    ]
